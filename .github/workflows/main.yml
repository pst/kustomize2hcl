name: test
on:
  push:

env:
  GO_VERSION: ">=1.15"
  TERRAFORM_VERSION: "0.13.4"

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: "${{ env.GO_VERSION }}"

      - name: Run unit tests
        run: make test

      - name: Run goreleaser
        uses: kbst/goreleaser-action@v2
        with:
          version: latest
          args: release --skip-publish --snapshot --rm-dist --skip-sign

      - name: Upload dist artifact
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist/*.zip

  generate:
    runs-on: ubuntu-latest
    needs: build
    env:
      TF_PLUGIN_CACHE_DIR: /tmp/.terraform/plugin-cache

    steps:
      - name: Checkout catalog repo
        uses: actions/checkout@v2
        with:
          repository: kbst/catalog
          ref: master
          path: catalog

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1.2.0
        with:
          terraform_wrapper: false
          terraform_version: "${{ env.TERRAFORM_VERSION }}"

      - name: Download dist artifact
        uses: actions/download-artifact@v2
        with:
          name: dist
      
      - name: Prepare kustomize2hcl binary
        run: |
          unzip kustomize2hcl_linux_amd64.zip
          echo "${{ github.workspace }}" >> $GITHUB_PATH

      - name: Generate modules
        run: |
          mkdir -p modules/
          for entry in `ls catalog/src`; do
            for variant in `ls catalog/src/$entry`; do
              if [[ $variant = _* ]];then continue; fi
              kustomize2hcl catalog/src/$entry/$variant modules/$entry-$variant
            done
          done

      - name: Setup plugin-cache
        run: |
          mkdir -p $TF_PLUGIN_CACHE_DIR
      
      - name: Validate generated modules
        run: |
          for module in `ls modules/`; do
            cd modules/$module
            terraform init
            terraform validate
            cd -
          done

      - name: Upload module artifact
        uses: actions/upload-artifact@v2
        with:
          name: modules
          path: |
            modules/
            !modules/**/.terraform

  test:
    runs-on: ubuntu-latest
    needs: generate

    steps:
      - uses: actions/checkout@v2

      - name: 'Setup Kind'
        uses: engineerd/setup-kind@v0.4.0
        with:
          version: "v0.9.0"

      - name: Checkout terraform-provider-kubernetes-alpha
        uses: actions/checkout@v2
        with:
          repository: hashicorp/terraform-provider-kubernetes-alpha
          ref: local-plan
          path: terraform-provider-kubernetes-alpha

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: "${{ env.GO_VERSION }}"

      - name: Build provider
        run: |
          cd terraform-provider-kubernetes-alpha
          go build
          mkdir -p ~/.local/share/terraform/plugins/registry.terraform.io/hashicorp/kubernetes-alpha/99.0.0/linux_amd64/
          mv terraform-provider-kubernetes-alpha ~/.local/share/terraform/plugins/registry.terraform.io/hashicorp/kubernetes-alpha/99.0.0/linux_amd64/

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1.2.0
        with:
          terraform_wrapper: false
          terraform_version: "${{ env.TERRAFORM_VERSION }}"

      - name: Download modules artifact
        uses: actions/download-artifact@v2
        with:
          name: modules
          path: modules/

      - name: Test modules
        run: |
          pip3 install pipenv
          pipenv run nosetests -s test.py
